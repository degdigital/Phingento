#!/bin/bash
# Creates a tarball with data and or files from the specified environment
# Specify one of the following options:
#   -m Backup Media Files
#   -m Backup Var Files (excluding cache, sessions, and package)
#   -d Backup Database
#   -s Strip logs and customer data
# Example: backup beta -f -d -s

if [ -z $1 ]; then
    echo "you must provide the name of the environment to backup"
    exit 1
else
    ENVIRONMENT=$1
fi

shift

MEDIA=0
VAR=0
DATABASE=0
STRIP_DB=0

while getopts ":dmsv" opt; do
    case $opt in
        m)
            MEDIA=1
            ;;
        d)
            DATABASE=1
            ;;
        s)
            STRIP_DB=1
            ;;
        v)
            VAR=1
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1
         ;;
    esac
done

if [[ "$MEDIA" == 0 && "$DATABASE" == 0 && "$VAR" == 0 ]]; then
    echo "Nothing to backup, please specify -m, -v or -d flags"
    exit 1
fi

PROJECT=$USER

BACKUP_NAME="$PROJECT"_"$ENVIRONMENT"

if [ -d /tmp/$BACKUP_NAME ]; then
    rm -rf /tmp/$BACKUP_NAME
fi
mkdir /tmp/$BACKUP_NAME

if [ "$MEDIA" = "1" ]; then
    echo "Backing up media"
    cp -arf ~/"$ENVIRONMENT"_media /tmp/$BACKUP_NAME
fi

if [ "$VAR" = "1" ]; then
    echo "Backing up var"
    rsync -a ~/"$ENVIRONMENT"_var /tmp/$BACKUP_NAME/ --exclude=cache --exclude=full_page_cache --exclude=session --exclude=package
fi

cp ~/$ENVIRONMENT/app/etc/local.xml /tmp/$BACKUP_NAME

if [ "$DATABASE" = "1" ]; then
    if [[ -x /usr/local/bin/n98-magerun.phar ]]; then
        cd ~/$ENVIRONMENT
        if [ "$STRIP_DB" == "1" ]; then
            n98-magerun.phar db:dump --strip="@development" /tmp/$BACKUP_NAME/$PROJECT.sql
        else
            n98-magerun.phar db:dump /tmp/$BACKUP_NAME/$PROJECT.sql
        fi
    else
        echo "n98-magerun is missing please install to /usr/local/bin"
        exit 1
    fi
fi

cd /tmp/

if [ -e /tmp/"$BACKUP_NAME"_backup.tar.gz ]; then
    rm -f /tmp/"$BACKUP_NAME"_backup.tar.gz
fi

tar czf /tmp/"$BACKUP_NAME"_backup.tar.gz $BACKUP_NAME

BACKUP_SIZE=`ls -lh /tmp/"$BACKUP_NAME"_backup.tar.gz | awk '{ print $5 }' | tail -1`

echo "Backup Complete - $BACKUP_SIZE"