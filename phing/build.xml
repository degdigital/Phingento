<?xml version="1.0"?>
<!--
This build file does some initialization and contains the targets which are actually run during development and deployment.
-->
<project name="magento_tools" default="relink">
    <php function="dirname" returnProperty="magento_tools">
        <param value="${phing.file.magento_tools}"/>
    </php>

    <tstamp/>
    <property environment="env"/>

    <!-- load the cross project default properties file -->
    <property file="${magento_tools}/default.properties"/>

    <!-- load the per-project build properties file -->
    <property file="build.properties" override="true"/>

    <fail unless="workspace" message="The workspace property MUST be set"/>
    <fail unless="project.magento.edition" message="The project.magento.edition property MUST be set"/>
    <fail unless="project.magento.version" message="The project.magento.version property MUST be set"/>
    <fail unless="project.git.remote" message="The project.git.remote property MUST be set"/>

    <resolvepath propertyName="workspace" file="${workspace}"/>

    <includepath classpath="${magento_tools}/classes/"/>
    <taskdef name="advanced-symlink" classname="AdvancedSymlinkTask"/>

    <property name="package" value="${magento_tools}/package.xml"/>
    <property name="remote" value="${magento_tools}/remote.xml"/>
    <property name="development" value="${magento_tools}/development.xml"/>
    <property name="libs" value="${magento_tools}/libs.xml"/>
    <property name="project.name" value="${phing.project.name}"/>
    <property name="project.magedir" value="${workspace}/${project.name}_mage"/>
    <property name="magento.archive.file" value="${magento.archive.dir}/${project.magento.edition}-${project.magento.version}.${magento.archive.extension}"/>

    <!-- Development targets -->
    <target name="setup_project">
        <phing buildfile="${development}" target="setup-project" haltonfailure="true"/>
    </target>
    <target name="rebuild">
        <phing buildfile="${development}" target="reset" haltonfailure="true"/>
        <exec command="rm -rf ${workspace}/${project.name}_lib"/>
        <exec command="cp -r ${project.magedir} ${workspace}/${project.name}_lib" checkreturn="true"/>
        <phing buildfile="${development}" target="relink" haltonfailure="true"/>
        <phing buildfile="${development}" target="flush-cache" haltonfailure="true"/>
    </target>
    <target name="relink">
        <phing buildfile="${development}" target="clear-symlinks" haltonfailure="true"/>
        <phing buildfile="${libs}" target="link-libs"/>
        <phing buildfile="${development}" target="relink" haltonfailure="true"/>
        <phing buildfile="${development}" target="flush-cache"/>
    </target>
    <target name="flush_cache">
        <phing buildfile="${development}" target="flush-cache" haltonfailure="true"/>
    </target>
    <target name="compass_watch">
        <phing buildfile="${development}" target="compass-watch" haltonfailure="true"/>
    </target>

    <target name="deploy">
        <if>
            <not><isset property="deploy.environment"/></not>
            <then>
                <input propertyName="deploy.environment" defaultValue="${deploy.environments.default}" validArgs="${deploy.environments}" message="Which environment would you like to deploy to? "/>
            </then>
        </if>

        <phing buildfile="${package}" target="package" haltonfailure="true"/>
        <phing buildfile="${remote}" target="environment-deploy" haltonfailure="true"/>
    </target>

    <target name="backup">
        <if>
            <not><isset property="deploy.environment"/></not>
            <then>
                <input propertyName="deploy.environment" defaultValue="${deploy.environments.default}" validArgs="${deploy.environments}" message="Which environment would you like to back up? "/>
            </then>
        </if>

        <if>
            <not><isset property="backup.database"/></not>
            <then>
                <input propertyName="backup.database" defaultValue="Y" validArgs="Y,N" message="Backup Database? "/>
            </then>
        </if>

        <if>
            <and>
                <equals arg1="${backup.database}" arg2="Y"/>
                <not><isset property="backup.database.strip"/></not>
            </and>
            <then>
                <input propertyName="backup.database.strip" defaultValue="Y" validArgs="Y,N" message="Strip logs and customer data? "/>
            </then>
        </if>

        <if>
            <not><isset property="backup.media"/></not>
            <then>
                <input propertyName="backup.media" defaultValue="N" validArgs="Y,N" message="Backup Media? "/>
            </then>
        </if>

        <if>
            <not><isset property="backup.var"/></not>
            <then>
                <input propertyName="backup.var" defaultValue="N" validArgs="Y,N" message="Backup Var? "/>
            </then>
        </if>

        <phing buildfile="${remote}" target="environment-backup" haltonfailure="true"/>
    </target>
    <target name="restore_backup">
        <phing buildfile="${development}" target="restore-backup" haltonfailure="true"/>
    </target>

    <target name="package">
        <if>
            <not><isset property="deploy.environment"/></not>
            <then>
                <input propertyName="deploy.environment" defaultValue="${deploy.environments.default}" validArgs="${deploy.environments}" message="Which environment would you like create a package for? "/>
            </then>
        </if>
        <phing buildfile="${package}" target="package" haltonfailure="true"/>
    </target>
</project>