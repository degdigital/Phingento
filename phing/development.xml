<?xml version="1.0"?>
<project name="development" default="flush-cache">
    <fail unless="project.magedir" message="The project.magedir property MUST be set"/>

    <target name="reset">
        <fail unless="magento.archive.file" message="The magento.archive.file property MUST be set"/>
        <exec command="rm -rf ${project.magedir}/var"/>
        <delete dir="${project.magedir}"/>
        <mkdir dir="${project.magedir}"/>
        <exec dir="${project.magedir}" checkreturn="true" command="tar --strip-components 1 -xf ${magento.archive.file}" logoutput="true"/>
        <phing buildfile="${libs}" target="link-libs"/>
        <foreach target="apply-patch" param="patch.path" absparam="patch.abspath">
            <fileset dir="${project.basedir}">
                <include name="*.patch"/>
            </fileset>
            <fileset dir="${project.magedir}">
                <include name="*.patch"/>
            </fileset>
        </foreach>

        <chmod file="${project.magedir}/var" mode="777"/>
    </target>

    <target name="relink">
        <resolvepath propertyName="magedir" path="${project.magedir}"/>
        <delete dir="${magedir}/media" />
        <advanced-symlink link="${magedir}">
            <fileset dir="${project.basedir}">
                <include name="*.ico"/>
                <include name="*.php"/>
                <include name="*.sh"/>
                <include name="js/**"/>
                <include name="lib/**"/>
                <include name="shell/*"/>
                <include name="errors/*"/>
                <include name="app/code/*/*/*"/>
                <include name="app/locale/*/**"/>
                <include name="app/etc/modules/*.xml"/>
                <include name="skin/frontend/*/**"/>
                <include name="skin/adminhtml/*/**"/>
                <include name="app/design/frontend/*/*/*/**"/>
                <include name="app/design/adminhtml/*/*/*/**"/>
                <include name="media"/>
                <include name="var/session"/>
                <include name="robots.txt"/>
                <include name="lbcheck.html"/>
                <include name="app/etc/local.xml"/>
                <include name="app/etc/local.xml.phpunit"/>
            </fileset>
        </advanced-symlink>
    </target>

    <target name="flush-cache">
        <exec dir="${project.magedir}" command="n98-magerun.phar cache:flush" checkreturn="true" logoutput="true"/>
    </target>

    <!-- Sets up hosts file and apache config can only be run as root -->
    <target name="setup-apache">
        <taskdef name="domains" classname="DomainsTask"/>
        <taskdef name="apache-config" classname="ApacheConfigTask"/>

        <property name="project.magento.runcodes" value=""/>

        <!-- update hosts file -->
        <domains codes="${project.magento.runcodes}" property="hostfile_domains"/>
        <property name="ip_address" value="127.0.0.1"/>
        <exec command="echo '${ip_address} ${hostfile_domains}' >> /etc/hosts" checkreturn="true"/>

        <!-- add apache config file -->
        <apache-config codes="${project.magento.runcodes}" property="apache_config"/>
        <exec command="echo '${apache_config}' > /etc/httpd/conf.d/${project.name}.conf" checkreturn="true"/>
        <exec command="/sbin/service httpd restart" checkreturn="true"/>
    </target>

    <target name="setup-nginx">
        <taskdef name="domains" classname="DomainsTask"/>

        <property name="project.magento.runcodes" value=""/>
        <property name="project.magento.runtype" value="store"/>

        <!-- update hosts file -->
        <domains codes="${project.magento.runcodes}" property="hostfile_domains"/>
        <property name="ip_address" value="127.0.0.1"/>
        <exec command="echo '${ip_address} ${hostfile_domains}' >> /etc/hosts" checkreturn="true"/>

        <php function="str_replace" returnProperty="hostname_regexp">
            <param value="."/>
            <param value="\."/>
            <param value="${env.HOSTNAME}"/>
        </php>

        <php function="preg_replace" returnProperty="project_sanitized">
            <param value="/[^a-zA-Z0-9.]/"/>
            <param value=""/>
            <param value="${project.name}"/>
        </php>

        <copy file="${magento_tools}/templates/nginx.conf" tofile="/etc/nginx/conf.d/${project.name}.conf" overwrite="true">
            <filterchain>
                <replacetokens begintoken="{{" endtoken="}}">
                    <token key="project" value="${project_sanitized}"/>
                    <token key="runtype" value="${project.magento.runtype}"/>
                    <token key="hostname" value="${hostname_regexp}"/>
                </replacetokens>
            </filterchain>
        </copy>
        <exec command="/sbin/service nginx restart" checkreturn="true"/>
    </target>

    <target name="compass-watch">
        <foreach target="compass-watch-run" param="configfile" absparam="configfilepath">
            <fileset dir="${project.basedir}/skin/frontend" expandsymboliclinks="true">
                <include name="**/config.rb"/>
            </fileset>
        </foreach>
    </target>
    <target name="compass-watch-run">
        <php function="dirname" returnProperty="skin">
            <param value="${configfilepath}"/>
        </php>
        <exec dir="${skin}" command="compass watch" checkreturn="true" spawn="true"/>
    </target>

    <target name="restore-backup">
        <input defaultValue="develop" message="Which environment do you want to restore? " propertyName="backup.environment" validArgs="develop,alpha,beta,live"/>
        <property name="backup_file" value="${project.name}_${backup.environment}_backup.tar.gz"/>
        <available file="${backup_file}" filepath="${backup.dir}" property="backup_exists" value="Y"/>
        <fail unless="backup_exists" message="${backup_file} does not exist."/>

        <exec dir="${backup.dir}" command="rm -rf ${project.name}_${backup.environment}"/>
        <exec dir="${backup.dir}" command="tar -xf ${backup_file}"/>
        <property name="backup.extracted" value="${backup.dir}/${project.name}_${backup.environment}"/>

        <if>
            <available file="${backup.extracted}/${project.name}.sql"/>
            <then>
                <exec dir="${project.magedir}" command="n98-magerun.phar db:drop -f" checkreturn="false" logoutput="true" />
                <exec dir="${project.magedir}" command="n98-magerun.phar db:create" checkreturn="false" logoutput="true"/>
                <exec dir="${project.magedir}" command="n98-magerun.phar db:import ${backup.extracted}/*.sql" logoutput="true" checkreturn="true"/>

                <php function="str_replace" returnProperty="escapedProjectName">
                    <param value="_"/>
                    <param value=""/>
                    <param value="${project.name}"/>
                </php>

                <exec dir="${project.magedir}" command="n98-magerun.phar dev:symlinks --global --on" logoutput="true"/>
                <exec dir="${project.magedir}" command="n98-magerun.phar config:set web/unsecure/base_url http://${escapedProjectName}.${env.HOSTNAME}/" logoutput="true"/>
                <exec dir="${project.magedir}" command="n98-magerun.phar config:set web/secure/base_url http://${escapedProjectName}.${env.HOSTNAME}/" logoutput="true"/>

                <if>
                    <equals arg1="${project.magento.runtype}" arg2="website"/>
                    <then>
                        <property name="scope" value="websites"/>
                    </then>
                    <else>
                        <property name="scope" value="stores"/>
                    </else>
                </if>

                <if>
                    <isset property="project.magento.runcodes"/>
                    <then>
                        <foreach target="set-base-url" param="runcode" list="${project.magento.runcodes}"/>
                    </then>
                </if>

                <phingcall target="flush-cache"/>
            </then>
        </if>

        <if>
            <available file="${backup.extracted}/${backup.environment}_media"/>
            <then>
                <echo message="Copying media"/>
                <exec command="cp -Rf ${backup.environment}_media/* ${project.magedir}/media" dir="${backup.extracted}" checkreturn="true"/>
                <exec command="find -type d -exec chmod 777 {} +" dir="${project.magedir}/media" checkreturn="true"/>
                <exec command="find -type f -exec chmod 666 {} +" dir="${project.magedir}/media" checkreturn="true"/>
            </then>
        </if>
    </target>

    <!-- utility targets -->
    <target name="apply-patch">
        <patch patchfile="${patch.abspath}" dir="${project.magedir}" strip="0" haltonfailure="true" />
    </target>

    <target name="clear-symlinks">
        <resolvepath propertyName="magedir" path="${project.magedir}"/>
        <exec dir="${magedir}" command="find -type l -exec rm {} \;"/>
    </target>

    <target name="set-base-url">
        <exec dir="${project.magedir}" command="n98-magerun.phar config:set --scope=${scope} --scope-id=${runcode} web/unsecure/base_url http://${escapedProjectName}-${runcode}.${env.HOSTNAME}/" logoutput="true"/>
        <exec dir="${project.magedir}" command="n98-magerun.phar config:set --scope=${scope} --scope-id=${runcode} web/secure/base_url http://${escapedProjectName}-${runcode}.${env.HOSTNAME}/" logoutput="true"/>
    </target>
</project>